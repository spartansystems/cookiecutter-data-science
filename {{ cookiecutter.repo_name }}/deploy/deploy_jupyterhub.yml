---
- hosts: production

  vars:
    jhc_authenticator_admin_users:
      - saas
    jhc_jupyterhub_spawner_class: sudospawner.SudoSpawner
    jhc_ssl: false
    nb_review_dir: /home/spartan/{{ cookiecutter.repo_name }}/notebooks/reviewed
    nb_unreview_dir: /home/spartan/{{ cookiecutter.repo_name }}/notebooks/unreviewed
    nb_python_path: /home/spartan/{{ cookiecutter.repo_name }}/src
    install_jupyter: true
    install_jupyterhub: true
    install_py2kernel: true
    install_py3kernel: true
    install_juliakernel: true
    jhc_local_authenticator_create_system_users: true
    jhc_jupyterhub_authenticator_class: 'oauthenticator.google.LocalGoogleOAuthenticator'
    google_login_service: 'Spartan Notebooks'
    ds_no_ssl: 'false'
    kg_app_port: 9000

 
  pre_tasks:
    - name: install project-specific apt dependencies
      apt:
       name: {{ "{{ item }}" }}
      with_items:
        - git
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-numpy
        - python-scipy
        - python-matplotlib
      become: true

          
    - name: add jh_user
      user:
        name: {{ cookiecutter.jh_user }}
        password: {{ "{{ lookup('env', 'JH_USER_PW') }}" }}

      become: true

    - name: send github netrc for private dependencies
      template:
        src: ./templates/git.netrc
        dest: /home/{{ cookiecutter.jh_user }}/.netrc
        mode: 0600
      become: true
      become_user: {{ cookiecutter.jh_user }}

    - name: clone repo
      git:
        repo: https://github.com/{{ cookiecutter.github_org }}/{{ cookiecutter.repo_name }}.git
        dest: /home/{{ cookiecutter.jh_user }}/{{ cookiecutter.repo_name }}
      become: true
      become_user: {{ cookiecutter.jh_user }}
   
    - name: install repo requirements
      pip:
        executable: {{ "{{ item }}" }}
        requirements: /home/{{ cookiecutter.jh_user }}/{{ cookiecutter.repo_name }}/requirements.txt
        editable: false
      become: true
      with_items:
        - pip
        #- pip3

    - name: move remote env vars
      copy:
        src: ../{{ "{{ item }}" }}
        dest: /home/{{ cookiecutter.jh_user }}/{{ cookiecutter.repo_name }}/.env
        owner: {{ cookiecutter.jh_user }}
      with_items:
        - .env
      become: true

    - name: set up git user email for commits
      command: "git config --global user.email '{{ cookiecutter.github_email }}'"
      become: yes
      become_user: {{ cookiecutter.jh_user }}

    - name: set up git user name for commits
      command: "git config --global user.name 'BoosterData'" 
      become: yes
      become_user: {{ cookiecutter.jh_user }}

    - name: auto-commit reviewed shared notebooks
      cron:
        name: auto-commit reveiwed shared notebooks
        user: {{ cookiecutter.jh_user }}
        minute: '*/5'
        job: "cd /home/{{ cookiecutter.jh_user }}/{{ cookiecutter.repo_name }}/;\
              git add {% raw %} {{ nb_review_dir }} {% endraw %};\
              git commit -m 'auto-commit reviewed notebooks';\
              git push" 
      become: true

    - name: auto-commit unreviewed shared notebooks
      cron:
        name: auto-commit unreviewed shared notebooks
        user: {{ cookiecutter.jh_user }}
        minute: '*/5'
        job: "cd /home/{{ cookiecutter.jh_user }}/{{ cookiecutter.repo_name }}/;\
              git add {% raw %} {{ nb_unreview_dir }} {% endraw %}\
              git commit -m 'auto-commit unreviewed notebooks';\
              git push"
      become: true

  roles:
    - role: ./roles/spartan_data_science_role
      become: true
